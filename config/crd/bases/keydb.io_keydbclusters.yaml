apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: keydbclusters.keydb.io
spec:
  group: keydb.io
  names:
    kind: KeyDBCluster
    listKind: KeyDBClusterList
    plural: keydbclusters
    singular: keydbcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeyDBCluster is the Schema for the keydbclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal version, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyDBClusterSpec defines the desired state of KeyDBCluster
            properties:
              cluster:
                description: Cluster mode specific configuration
                properties:
                  replicasPerShard:
                    default: 1
                    description: Number of replicas per shard
                    minimum: 0
                    type: integer
                  shards:
                    default: 3
                    description: Number of shards (masters)
                    minimum: 1
                    type: integer
                type: object
              config:
                description: KeyDB configuration options
                properties:
                  maxMemory:
                    description: Maximum memory usage (e.g., "1gb", "512mb")
                    type: string
                  persistence:
                    default: true
                    description: Enable persistence
                    type: boolean
                  requirePass:
                    description: Password authentication configuration
                    properties:
                      secretRef:
                        description: Reference to a secret containing the password
                        properties:
                          key:
                            description: Key in the secret
                            type: string
                          name:
                            description: Name of the secret
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        description: Plain text password (not recommended for production)
                        type: string
                    type: object
                type: object
              image:
                default: eqalpha/keydb:latest
                description: KeyDB container image
                type: string
              mode:
                description: Deployment mode
                enum:
                - multi-master
                - cluster
                type: string
              multiMaster:
                description: Multi-master specific configuration
                properties:
                  activeReplica:
                    default: true
                    description: Enable active replica mode
                    type: boolean
                type: object
              replicas:
                default: 3
                description: Number of KeyDB instances (for multi-master mode)
                minimum: 1
                type: integer
              resources:
                description: Resource requirements
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              service:
                description: Service configuration
                properties:
                  port:
                    default: 6379
                    description: Service port
                    type: integer
                  type:
                    default: ClusterIP
                    description: Service type
                    type: string
                type: object
              storage:
                description: Storage configuration
                properties:
                  size:
                    default: 10Gi
                    description: Storage size
                    type: string
                  storageClass:
                    description: Storage class name
                    type: string
                type: object
            required:
            - mode
            type: object
          status:
            description: KeyDBClusterStatus defines the observed state of KeyDBCluster
            properties:
              conditions:
                description: Conditions represent the latest available observations
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodes:
                description: Individual node status
                items:
                  properties:
                    endpoint:
                      description: Node endpoint
                      type: string
                    name:
                      description: Node name
                      type: string
                    role:
                      description: Node role (master/replica)
                      type: string
                    status:
                      description: Node status
                      type: string
                  type: object
                type: array
              phase:
                description: Current phase
                type: string
              readyReplicas:
                description: Number of ready replicas
                type: integer
              replicas:
                description: Total number of replicas
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
